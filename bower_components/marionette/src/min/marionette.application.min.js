Marionette.Application=function(e){this.options=e,this._initializeRegions(e),this._initCallbacks=new Marionette.Callbacks,this.submodules={},_.extend(this,e),this._initChannel(),this.initialize.apply(this,arguments)},_.extend(Marionette.Application.prototype,Backbone.Events,{initialize:function(){},execute:function(){this.commands.execute.apply(this.commands,arguments)},request:function(){return this.reqres.request.apply(this.reqres,arguments)},addInitializer:function(e){this._initCallbacks.add(e)},start:function(e){this.triggerMethod("before:start",e),this._initCallbacks.run(e,this),this.triggerMethod("start",e)},addRegions:function(e){return this._regionManager.addRegions(e)},emptyRegions:function(){return this._regionManager.emptyRegions()},removeRegion:function(e){return this._regionManager.removeRegion(e)},getRegion:function(e){return this._regionManager.get(e)},getRegions:function(){return this._regionManager.getRegions()},module:function(e,t){var i=Marionette.Module.getClass(t),n=slice.call(arguments);return n.unshift(this),i.create.apply(i,n)},getRegionManager:function(){return new Marionette.RegionManager},_initializeRegions:function(e){var t=_.isFunction(this.regions)?this.regions(e):this.regions||{};this._initRegionManager();var i=Marionette.getOption(e,"regions");return _.isFunction(i)&&(i=i.call(this,e)),_.extend(t,i),this.addRegions(t),this},_initRegionManager:function(){this._regionManager=this.getRegionManager(),this.listenTo(this._regionManager,"before:add:region",function(e){this.triggerMethod("before:add:region",e)}),this.listenTo(this._regionManager,"add:region",function(e,t){this[e]=t,this.triggerMethod("add:region",e,t)}),this.listenTo(this._regionManager,"before:remove:region",function(e){this.triggerMethod("before:remove:region",e)}),this.listenTo(this._regionManager,"remove:region",function(e,t){delete this[e],this.triggerMethod("remove:region",e,t)})},_initChannel:function(){this.channelName=_.result(this,"channelName")||"global",this.channel=_.result(this,"channel")||Backbone.Wreqr.radio.channel(this.channelName),this.vent=_.result(this,"vent")||this.channel.vent,this.commands=_.result(this,"commands")||this.channel.commands,this.reqres=_.result(this,"reqres")||this.channel.reqres},triggerMethod:Marionette.triggerMethod,getOption:Marionette.proxyGetOption}),Marionette.Application.extend=Marionette.extend;