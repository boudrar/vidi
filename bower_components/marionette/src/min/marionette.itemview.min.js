Marionette.ItemView=Marionette.View.extend({constructor:function(){Marionette.View.apply(this,arguments)},serializeData:function(){var e={};return this.model?e=_.partial(this.serializeModel,this.model).apply(this,arguments):this.collection&&(e={items:_.partial(this.serializeCollection,this.collection).apply(this,arguments)}),e},serializeCollection:function(e){return e.toJSON.apply(e,slice.call(arguments,1))},render:function(){return this._ensureViewIsIntact(),this.triggerMethod("before:render",this),this._renderTemplate(),this.bindUIElements(),this.triggerMethod("render",this),this},_renderTemplate:function(){var e=this.getTemplate();if(e!==!1){if(!e)throw new Marionette.Error({name:"UndefinedTemplateError",message:"Cannot render the template since it is null or undefined."});var t=this.serializeData();t=this.mixinTemplateHelpers(t);var i=Marionette.Renderer.render(e,t,this);return this.attachElContent(i),this}},attachElContent:function(e){return this.$el.html(e),this},destroy:function(){return this.isDestroyed?void 0:Marionette.View.prototype.destroy.apply(this,arguments)}});